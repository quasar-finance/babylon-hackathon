{
  "contract_name": "mock-gauge",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "owner"
    ],
    "properties": {
      "owner": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "add_destination"
        ],
        "properties": {
          "add_destination": {
            "type": "object",
            "required": [
              "destination_id"
            ],
            "properties": {
              "destination_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "custom"
        ],
        "properties": {
          "custom": {
            "$ref": "#/definitions/Empty"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Empty": {
        "description": "An empty struct that serves as a placeholder in different places, such as contracts that don't set a custom message.\n\nIt is designed to be expressable in correct JSON and JSON Schema but contains no meaningful data. Previously we used enums without cases, but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)",
        "type": "object"
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "get_allocations"
        ],
        "properties": {
          "get_allocations": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_allocation"
        ],
        "properties": {
          "get_allocation": {
            "type": "object",
            "required": [
              "denom"
            ],
            "properties": {
              "denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "custom"
        ],
        "properties": {
          "custom": {
            "$ref": "#/definitions/Empty"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Empty": {
        "description": "An empty struct that serves as a placeholder in different places, such as contracts that don't set a custom message.\n\nIt is designed to be expressable in correct JSON and JSON Schema but contains no meaningful data. Previously we used enums without cases, but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)",
        "type": "object"
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "custom": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Empty",
      "description": "An empty struct that serves as a placeholder in different places, such as contracts that don't set a custom message.\n\nIt is designed to be expressable in correct JSON and JSON Schema but contains no meaningful data. Previously we used enums without cases, but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)",
      "type": "object"
    },
    "get_allocation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GetAllocationResponse",
      "type": "object",
      "required": [
        "allocation"
      ],
      "properties": {
        "allocation": {
          "$ref": "#/definitions/Allocation"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Allocation": {
          "type": "object",
          "required": [
            "amount",
            "destination_id"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Decimal"
            },
            "destination_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        }
      }
    },
    "get_allocations": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GetAllocationsResponse",
      "type": "object",
      "required": [
        "allocations"
      ],
      "properties": {
        "allocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Allocation": {
          "type": "object",
          "required": [
            "amount",
            "destination_id"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Decimal"
            },
            "destination_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        }
      }
    }
  }
}
