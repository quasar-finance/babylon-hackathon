{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "add_destination"
      ],
      "properties": {
        "add_destination": {
          "type": "object",
          "required": [
            "destination_id"
          ],
          "properties": {
            "destination_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "custom"
      ],
      "properties": {
        "custom": {
          "$ref": "#/definitions/ExecuteExtensionMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "ExecuteExtensionMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "owner"
          ],
          "properties": {
            "owner": {
              "$ref": "#/definitions/OwnerUpdate"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "upsert_allocation"
          ],
          "properties": {
            "upsert_allocation": {
              "type": "object",
              "required": [
                "amount",
                "destination_id"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Uint128"
                },
                "destination_id": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "OwnerUpdate": {
      "oneOf": [
        {
          "description": "Proposes a new owner to take role. Only current owner can execute.",
          "type": "object",
          "required": [
            "propose_new_owner"
          ],
          "properties": {
            "propose_new_owner": {
              "type": "object",
              "required": [
                "proposed"
              ],
              "properties": {
                "proposed": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Clears the currently proposed owner. Only current owner can execute.",
          "type": "string",
          "enum": [
            "clear_proposed"
          ]
        },
        {
          "description": "Promotes the proposed owner to be the current one. Only the proposed owner can execute.",
          "type": "string",
          "enum": [
            "accept_proposed"
          ]
        },
        {
          "description": "Throws away the keys to the Owner role forever. Once done, no owner can ever be set later.",
          "type": "string",
          "enum": [
            "abolish_owner_role"
          ]
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
